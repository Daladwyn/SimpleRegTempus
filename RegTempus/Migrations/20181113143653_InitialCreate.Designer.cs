// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RegTempus.Models;

namespace RegTempus.Migrations
{
    [DbContext(typeof(RegTempusDbContext))]
    [Migration("20181113143653_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.4-rtm-31024")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("RegTempus.Models.Registrator", b =>
                {
                    b.Property<int>("RegistratorId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FirstName")
                        .HasMaxLength(30);

                    b.Property<string>("LastName")
                        .HasMaxLength(30);

                    b.Property<int>("StartedTimeMeasurement");

                    b.Property<bool>("UserHaveStartedTimeMeasure");

                    b.Property<string>("UserId")
                        .HasMaxLength(36);

                    b.HasKey("RegistratorId");

                    b.ToTable("Registrators");
                });

            modelBuilder.Entity("RegTempus.Models.TimeMeasurement", b =>
                {
                    b.Property<int>("TimeMeasurementId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("DayOfMonth");

                    b.Property<int>("MonthOfYear");

                    b.Property<int>("RegistratorId");

                    b.Property<DateTime>("TimeRegistered");

                    b.Property<DateTime>("TimeStart");

                    b.Property<DateTime>("TimeStop");

                    b.Property<string>("TimeType");

                    b.HasKey("TimeMeasurementId");

                    b.ToTable("TimeMeasurements");
                });
#pragma warning restore 612, 618
        }
    }
}
